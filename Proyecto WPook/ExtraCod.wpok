Public Class Form1
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        For Each archivo As String In My.Computer.FileSystem.GetFiles("D:\Mundo Uzumaki", FileIO.SearchOption.SearchAllSubDirectories, "*.txt")
            Dim nomArchivo = IO.Path.GetFileName(archivo)
            cb_capitulos.Items.Add(nomArchivo)
        Next
    End Sub
    Private Sub tsmi_Nuevo_Click(sender As Object, e As EventArgs) Handles tsmi_Nuevo.Click
        FileClose()
    End Sub

    Private Sub tsmi_Abrir_Click_1(sender As Object, e As EventArgs) Handles tsmi_Abrir.Click
        abrirProyecto()
    End Sub

    Private Sub tsmi_Guardar_Click_1(sender As Object, e As EventArgs) Handles tsmi_Guardar.Click
        guardarArchivo()
    End Sub

    Sub guardarArchivo()

        ' NOTA: ESTA SINTAXIX DEVUELVE EL NUMERO DE ARCHIVOS QUE HAY EN UN DIRECTORIO
        Dim Total As Integer = My.Computer.FileSystem.GetFiles("D:\Mundo Uzumaki", FileIO.SearchOption.SearchAllSubDirectories, "*.txt").Count


        SaveFileDialog1.Filter = "Archivos de Texto (*.txt*)|*.txt"
        If SaveFileDialog1.ShowDialog = Windows.Forms.DialogResult.OK Then
            'Aqui obtenemos la ruta entera del archivo
            Dim rutaArchivo = SaveFileDialog1.FileName
            'Obtenemos el nombre del archivo separandolo de la ruta completa
            Dim nomArchivo = IO.Path.GetFileName(rutaArchivo)
            'Remplazamos la ruta, al modificar el nombre que nosotros hemos puesto a√±adiendole el numero de capitulos  
            Dim regFinal = rutaArchivo.Replace(nomArchivo, "ch" & Total & "-" & nomArchivo)

            My.Computer.FileSystem.WriteAllText(regFinal, RichTextBox1.Text, True)
        End If
    End Sub
    Sub abrirProyecto()
        'Dim fileReader As String
        'fileReader = My.Computer.FileSystem.ReadAllText("D:\pword.docx")
        'RichTextBox1.Text = fileReader

        Dim fileReader As String
        OpenFileDialog1.ShowDialog()
        Dim filepath = OpenFileDialog1.FileName
        fileReader = My.Computer.FileSystem.ReadAllText(filepath)
        RichTextBox1.Text = fileReader
        lbl_archivo.Text = IO.Path.GetFileName(filepath)
        Close()

    End Sub
    Sub abrirArchivo()
        Dim fileReader As String
        fileReader = My.Computer.FileSystem.ReadAllText("D:\pword.docx")
        RichTextBox1.Text = fileReader
    End Sub

    Private Sub Form2ToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles Form2ToolStripMenuItem.Click
        Form2.Show()
    End Sub

	Private Sub bucles()
'Dim indexFile
        'Dim wpok = My.Computer.FileSystem.GetFiles(proyectPath, FileIO.SearchOption.SearchAllSubDirectories, "*.wpok")

        'For Each namechapter As String In wpok
        '    MsgBox("Entra")
        '    MsgBox(namechapter)
        '    arIndex.Add(Path.GetFileNameWithoutExtension(namechapter))
        'Next namechapter

        'For Each indexFile In My.Computer.FileSystem.GetFiles(proyectPath, FileIO.SearchOption.SearchAllSubDirectories, proyectFile("index"))
        '    indexFile = File.ReadAllText(indexFile)
        'Next
        'If indexFile <> "" Then indexFile = indexFile.TrimEnd("|")
        ''Dim fileNames() As String = indexFile.Split("|")
        ''fileNames.ToList
        'For Each chapters In indexFile.Split("|")
        '    MsgBox(chapters)
        '    arProyect.Add("Ideas")
        '    MsgBox("Prueba")
        'Next

        'Dim DirectorioProyecto As String
        'Dim Linea3 As New ArrayList()
        'Dim i As Integer
        'Dim j As Integer
        'Dim esta As Boolean

        'Linea1(1) = "ABC"
        'Linea1(2) = "CDE"
        'Linea1(3) = "EFG"
        'Linea2(1) = "123"
        'Linea2(2) = "ABC"
        'Linea2(3) = "CDE"
        'Linea2(4) = "CDE"
        'Linea3.Add(Linea1(1))
        'i = 0
        '' insertamos en Linea3 los elementos no repetidos de Linea1
        'While (i < Linea1.Length)
        '    esta = False
        '    j = 0
        '    While (j < Linea3.Count And Not esta)
        '        ' vamos comparando cada uno de los elementos del vector Linea1
        '        ' con todos los elementos del vector Linea3.
        '        ' Si son iguales pasamos al siguiente elemento del vector Linea3
        '        If (Linea1(i) = Linea3.Item(j)) Then
        '            esta = True
        '        End If
        '        j = j + 1
        '    End While
        '    ' Si el elemento de Linea1 que hemos comparado con todos los elementos
        '    ' de Linea3 no ha sido igual a ninguno, tenemos que insertarlo en Linea3
        '    If Not (esta) Then
        '        Linea3.Add(Linea1(i))
        '    End If
        '    i = i + 1
        'End While
        '' insertamos en Linea3 los elementos no repetidos de Linea2 haciendo
        '' exactamente lo mismo que antes para Linea1
        '' inicializamos de nuevo la variable i
        'i = 1
        'While (i < Linea2.Length)
        '    esta = False
        '    j = 0
        '    While (j < Linea3.Count And Not esta)
        '        If (Linea2(i) = Linea3.Item(j)) Then
        '            esta = True
        '        End If
        '        j = j + 1
        '    End While
        '    If Not (esta) Then
        '        Linea3.Add(Linea2(i))
        '    End If
        '    i = i + 1
        'End While
        ''Sacamos por pantalla el vector Linea3
        'Dim h As Integer
        'For h = 0 To Linea3.Count - 1
        '    MsgBox(Linea3.Item(h))
        'Next
        '' Este mensaje lo ponemos para que nos de tiempo a visualizar en la
        '' consola el resultado del vector Linea3.
        'MsgBox("")	
End Sub



End Class


